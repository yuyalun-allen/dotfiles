!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!CSS	c,class	/classes/
!_TAG_KIND_DESCRIPTION!CSS	i,id	/identities/
!_TAG_KIND_DESCRIPTION!CSS	s,selector	/selectors/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!CSS	0.0	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/allen/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
#	vimrc	/^vnoremap <silent> # :call VisualSearch('b')<CR>$/;"	m
#backlight	waybar/style.css	/^#backlight {$/;"	i
#battery	waybar/style.css	/^#battery {$/;"	i
#battery.charging	waybar/style.css	/^#battery.charging, #battery.plugged {$/;"	c
#battery.critical:not(.charging)	waybar/style.css	/^#battery.critical:not(.charging) {$/;"	c
#battery.plugged	waybar/style.css	/^#battery.charging, #battery.plugged {$/;"	c
#clock	waybar/style.css	/^#clock {$/;"	i
#cpu	waybar/style.css	/^#cpu {$/;"	i
#custom-launcher	waybar/style.css	/^#custom-launcher {$/;"	i
#idle_inhibitor	waybar/style.css	/^#idle_inhibitor {$/;"	i
#idle_inhibitor.activated	waybar/style.css	/^#idle_inhibitor.activated {$/;"	c
#memory	waybar/style.css	/^#memory {$/;"	i
#mode	waybar/style.css	/^#mode {$/;"	i
#network	waybar/style.css	/^#network {$/;"	i
#pulseaudio	waybar/style.css	/^#pulseaudio {$/;"	i
#tray	waybar/style.css	/^#tray {$/;"	i
#tray > .needs-attention	waybar/style.css	/^#tray > .needs-attention {$/;"	c
#tray > .passive	waybar/style.css	/^#tray > .passive {$/;"	c
#window	waybar/style.css	/^#window {$/;"	i
#workspaces	waybar/style.css	/^#workspaces {$/;"	i
#workspaces button	waybar/style.css	/^#workspaces button {$/;"	s
#workspaces button.active	waybar/style.css	/^#workspaces button.active {$/;"	c
#workspaces button.urgent	waybar/style.css	/^#workspaces button.urgent {$/;"	c
#workspaces button:hover	waybar/style.css	/^#workspaces button:hover {$/;"	s
$LANG	vimrc	/^let $LANG='en'$/;"	v
*	vimrc	/^vnoremap <silent> * :call VisualSearch('f')<CR>$/;"	m
*	waybar/style.css	/^* {$/;"	s
.modules-left > widget:first-child > #workspaces	waybar/style.css	/^.modules-left > widget:first-child > #workspaces {$/;"	i
.modules-right > widget:last-child > #workspaces	waybar/style.css	/^.modules-right > widget:last-child > #workspaces {$/;"	i
0	settings.json	/^                "workbench.action.files.save",$/;"	s	array:vim.normalModeKeyBindings.0.commands
0	settings.json	/^            "before": ["leader", "<cr>"],$/;"	s	array:vim.normalModeKeyBindings.1.before
0	settings.json	/^            "before": ["leader", "w"],$/;"	s	array:vim.normalModeKeyBindings.0.before
0	settings.json	/^            "commands": [":nohl"]$/;"	s	array:vim.normalModeKeyBindings.1.commands
0	settings.json	/^        {$/;"	o	array:vim.normalModeKeyBindings
1	settings.json	/^            "before": ["leader", "<cr>"],$/;"	s	array:vim.normalModeKeyBindings.1.before
1	settings.json	/^            "before": ["leader", "w"],$/;"	s	array:vim.normalModeKeyBindings.0.before
1	settings.json	/^        {$/;"	o	array:vim.normalModeKeyBindings
<C-a>	settings.json	/^        "<C-a>": false,$/;"	b	object:vim.handleKeys
<C-f>	settings.json	/^        "<C-f>": false,$/;"	b	object:vim.handleKeys
<C-h>	vimrc	/^map <C-h> <C-W>h$/;"	m
<C-j>	vimrc	/^map <C-j> <C-W>j$/;"	m
<C-k>	vimrc	/^map <C-k> <C-W>k$/;"	m
<C-l>	vimrc	/^map <C-l> <C-W>l$/;"	m
<C-p>	settings.json	/^        "<C-p>": false$/;"	b	object:vim.handleKeys
<C-p>	vimrc	/^nmap <C-p> :Clap<CR> $/;"	m
<C-w>x	vimrc	/^nnoremap <C-w>x <C-w>c$/;"	m
<M-j>	vimrc	/^nmap <M-j> mz:m+<cr>`z$/;"	m
<M-j>	vimrc	/^vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z$/;"	m
<M-k>	vimrc	/^nmap <M-k> mz:m-2<cr>`z$/;"	m
<M-k>	vimrc	/^vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z$/;"	m
<S-Tab>	vimrc	/^inoremap <expr> <S-Tab> pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<Tab>	vimrc	/^inoremap <expr> <Tab>   pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<cr>	vimrc	/^inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\\<cr>"$/;"	m
<leader><cr>	vimrc	/^map <silent> <leader><cr> :noh<cr>$/;"	m
<leader>b	vimrc	/^map <leader>b :ls<cr>$/;"	m
<leader>ba	vimrc	/^map <leader>ba :bufdo bd<cr>$/;"	m
<leader>bd	vimrc	/^map <leader>bd :bclose<cr>:tabclose<cr>gT$/;"	m
<leader>h	vimrc	/^map <leader>h :bprevious<cr>$/;"	m
<leader>l	vimrc	/^map <leader>l :bnext<cr>$/;"	m
<leader>sl	vimrc	/^nnoremap <leader>sl :split \/tmp\/vim-lsp.log<CR>$/;"	m
<leader>tc	vimrc	/^map <leader>tc :tabclose<cr>$/;"	m
<leader>tn	vimrc	/^map <leader>tn :tabnew<cr>$/;"	m
<leader>to	vimrc	/^map <leader>to :tabonly<cr>$/;"	m
<leader>w	vimrc	/^nmap <leader>w :w!<cr>$/;"	m
<space>	vimrc	/^map <space> ?$/;"	m
CARGO_HOME	general-env.conf	/^CARGO_HOME="$XDG_DATA_HOME\/cargo"$/;"	k
EDITOR	general-env.conf	/^EDITOR="vim"$/;"	k
GLFW_IM_MODULE	general-env.conf	/^GLFW_IM_MODULE=ibus$/;"	k
GOMODCACHE	general-env.conf	/^GOMODCACHE="$XDG_CACHE_HOME\/go\/mod"$/;"	k
GOPATH	general-env.conf	/^GOPATH="$XDG_DATA_HOME\/go"$/;"	k
GRADLE_USER_HOME	general-env.conf	/^GRADLE_USER_HOME="$XDG_DATA_HOME\/gradle"$/;"	k
JAVA_HOME	general-env.conf	/^JAVA_HOME="\/usr\/lib\/jvm\/default-runtime"$/;"	k
JumpToNextBlankLine	vimrc	/^function! JumpToNextBlankLine()$/;"	f
JumpToPrevBlankLine	vimrc	/^function! JumpToPrevBlankLine()$/;"	f
NNN_PLUG	general-env.conf	/^NNN_PLUG="f:finder;o:fzopen;p:mocq;d:diffs;t:nmount;v:imgview"$/;"	k
NPM_CONFIG_USERCONFIG	general-env.conf	/^NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME\/npm\/npmrc"$/;"	k
NVM_DIR	general-env.conf	/^NVM_DIR="$HOME\/.config\/nvm"$/;"	k
OLLAMA_MODELS	general-env.conf	/^OLLAMA_MODELS="$XDG_DATA_HOME\/ollama\/models"$/;"	k
QT_AUTO_SCREEN_SCALE_FACTOR	general-env.conf	/^QT_AUTO_SCREEN_SCALE_FACTOR=1$/;"	k
QT_IM_MODULE	general-env.conf	/^QT_IM_MODULE=fcitx$/;"	k
QT_QPA_PLATFORMTHEME	general-env.conf	/^QT_QPA_PLATFORMTHEME=qt5ct$/;"	k
RBENV_ROOT	general-env.conf	/^RBENV_ROOT="$XDG_DATA_HOME\/rbenv"$/;"	k
RUSTUP_HOME	general-env.conf	/^RUSTUP_HOME="$XDG_DATA_HOME\/rustup"$/;"	k
TreeSitterHighlight	vimrc	/^augroup TreeSitterHighlight$/;"	a
VisualSearch	vimrc	/^function! VisualSearch(direction) range$/;"	f
W	vimrc	/^command W w !sudo tee % > \/dev\/null$/;"	c
WINEPREFIX	general-env.conf	/^WINEPREFIX="$XDG_DATA_HOME\/wineprefixes\/default"$/;"	k
XDG_CACHE_HOME	general-env.conf	/^XDG_CACHE_HOME="$HOME\/.cache"$/;"	k
XDG_CONFIG_HOME	general-env.conf	/^XDG_CONFIG_HOME="$HOME\/.config"$/;"	k
XDG_DATA_HOME	general-env.conf	/^XDG_DATA_HOME="$HOME\/.local\/share"$/;"	k
XDG_STATE_HOME	general-env.conf	/^XDG_STATE_HOME="$HOME\/.local\/state"$/;"	k
XMODIFIERS	general-env.conf	/^XMODIFIERS=@im=fcitx$/;"	k
[<Space>	vimrc	/^nnoremap [<Space> :call JumpToPrevBlankLine()<CR>$/;"	m
]<Space>	vimrc	/^nnoremap ]<Space> :call JumpToNextBlankLine()<CR>$/;"	m
before	settings.json	/^            "before": ["leader", "<cr>"],$/;"	a	object:vim.normalModeKeyBindings.1
before	settings.json	/^            "before": ["leader", "w"],$/;"	a	object:vim.normalModeKeyBindings.0
bg	tmux.conf	/^set -g status-right '#[fg=colour37,bold]%Y-%m-%d #[fg=white,bold, bg=colour37]%H:%M'$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod , W, exec, python ~\/.config\/wofi\/windowlist.py$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod ALT, h, resizeactive, -30 0$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod ALT, j, resizeactive, 0 15$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod ALT, k, resizeactive, 0 -15$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod ALT, l, resizeactive, 30 0$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 0, movetoworkspace, special$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 1, movetoworkspace, 1$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 2, movetoworkspace, 2$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 3, movetoworkspace, 3$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 4, movetoworkspace, 4$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 5, movetoworkspace, 5$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 6, movetoworkspace, 6$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 7, movetoworkspace, 7$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 8, movetoworkspace, 8$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, 9, movetoworkspace, 9$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, S, exec, slurp | grim -g - - | wl-copy$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, TAB, workspace, e-1$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, h, movefocus, l$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, j, movefocus, u$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, k, movefocus, d$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod SHIFT, l, movefocus, r$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 0, togglespecialworkspace$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 1, workspace, 1$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 2, workspace, 2$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 3, workspace, 3$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 4, workspace, 4$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 5, workspace, 5$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 6, workspace, 6$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 7, workspace, 7$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 8, workspace, 8$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, 9, workspace, 9$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, E, exec, nautilus --new-window$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, F, fullscreen$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, I, exec, firefox$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, K, exec, kitty$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, L, exec, swaylock $/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, M, exit $/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, S, exec, wofi --show=drun --allow-images $/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, T, togglefloating $/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, TAB, workspace, e+1$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, V, exec, cliphist list | wofi --dmenu --allow-image | cliphist decode | wl-copy$/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, X, killactive $/;"	k
bind	hypr/hyprland.conf	/^bind = $mainMod, Z, fullscreen, 1$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioLowerVolume, exec, pamixer -d 5 $/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioLowerVolume, exec, ~\/.config\/hypr\/scripts\/volume --dec $/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioMicMute, exec, pamixer --default-source -m$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioMicMute, exec, ~\/.config\/hypr\/scripts\/volume --toggle-mic $/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioMute, exec, pamixer -m$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioMute, exec, ~\/.config\/hypr\/scripts\/volume --toggle$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioRaiseVolume, exec, pamixer -i 5 $/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86AudioRaiseVolume, exec, ~\/.config\/hypr\/scripts\/volume --inc $/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86MonBrightnessDown, exec, brightnessctl s 2%-$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86MonBrightnessDown, exec, ~\/.config\/hypr\/scripts\/backlight --dec$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86MonBrightnessUp, exec, brightnessctl s +2%$/;"	k
bind	hypr/hyprland.conf	/^bind = , XF86MonBrightnessUp, exec, ~\/.config\/hypr\/scripts\/backlight --inc $/;"	k
bind	tmux.conf	/^bind = resize-pane -U 5$/;"	k
bindm	hypr/hyprland.conf	/^bindm = $mainMod, mouse:272, movewindow$/;"	k
bindm	hypr/hyprland.conf	/^bindm = $mainMod, mouse:273, resizewindow$/;"	k
button	waybar/style.css	/^button {$/;"	s
button:hover	waybar/style.css	/^button:hover {$/;"	s
cmake.showOptionsMovedNotification	settings.json	/^    "cmake.showOptionsMovedNotification": false,$/;"	b
commands	settings.json	/^            "commands": [":nohl"]$/;"	a	object:vim.normalModeKeyBindings.1
commands	settings.json	/^            "commands": [$/;"	a	object:vim.normalModeKeyBindings.0
debug.console.fontSize	settings.json	/^    "debug.console.fontSize": 17,$/;"	n
dec_mic_volume	hypr/scripts/volume	/^dec_mic_volume() {$/;"	f
dec_volume	hypr/scripts/volume	/^dec_volume() {$/;"	f
editor.cursorSurroundingLines	settings.json	/^    "editor.cursorSurroundingLines": 10,$/;"	n
editor.fontFamily	settings.json	/^    "editor.fontFamily": "CaskaydiaCove Nerd Font, Noto Serif SC, Consolas",$/;"	s
editor.fontLigatures	settings.json	/^    "editor.fontLigatures": false,$/;"	b
editor.fontSize	settings.json	/^    "editor.fontSize": 18,$/;"	n
editor.fontWeight	settings.json	/^    "editor.fontWeight": "bold",$/;"	s
editor.inlineSuggest.enabled	settings.json	/^    "editor.inlineSuggest.enabled": true,$/;"	b
editor.largeFileOptimizations	settings.json	/^    "editor.largeFileOptimizations": false,$/;"	b
editor.wordWrap	settings.json	/^    "editor.wordWrap": "off",$/;"	s
env	hypr/hyprland.conf	/^env = GDK_SCALE,2$/;"	k
env	hypr/hyprland.conf	/^env = QT_SCALE_FACTOR, 2$/;"	k
explorer.confirmDelete	settings.json	/^    "explorer.confirmDelete": false,$/;"	b
explorer.confirmDragAndDrop	settings.json	/^    "explorer.confirmDragAndDrop": false,$/;"	b
g:clap_plugin_experimental	vimrc	/^let g:clap_plugin_experimental = v:true$/;"	v
g:lsp_log_file	vimrc	/^let g:lsp_log_file = expand('\/tmp\/vim-lsp.log')$/;"	v
g:lsp_log_verbose	vimrc	/^let g:lsp_log_verbose = 1$/;"	v
g:lsp_semantic_enabled	vimrc	/^let g:lsp_semantic_enabled = 1$/;"	v
g:lsp_settings	vimrc	/^let g:lsp_settings = {$/;"	v
g:mapleader	vimrc	/^let g:mapleader = ","$/;"	v
g:netrw_home	vimrc	/^let g:netrw_home = $XDG_DATA_HOME."\/vim"$/;"	v
gD	vimrc	/^nnoremap gD :LspDeclaration<cr>$/;"	m
gd	vimrc	/^nnoremap gd :LspDefinition<cr>$/;"	m
get_icon	hypr/scripts/volume	/^get_icon() {$/;"	f
get_mic_icon	hypr/scripts/volume	/^get_mic_icon() {$/;"	f
get_volume	hypr/scripts/volume	/^get_volume() {$/;"	f
gi	vimrc	/^nnoremap gi :LspImplementation<cr>$/;"	m
github.copilot.editor.enableAutoCompletions	settings.json	/^    "github.copilot.editor.enableAutoCompletions": true,$/;"	b
gr	vimrc	/^nnoremap gr :LspReferences<cr>$/;"	m
http_proxy	general-env.conf	/^http_proxy="http:\/\/localhost:7890"$/;"	k
https_proxy	general-env.conf	/^https_proxy=$http_proxy$/;"	k
inc_mic_volume	hypr/scripts/volume	/^inc_mic_volume() {$/;"	f
inc_volume	hypr/scripts/volume	/^inc_volume() {$/;"	f
ipc	hypr/hyprpaper.conf	/^ipc = off$/;"	k
java.configuration.maven.userSettings	settings.json	/^    "java.configuration.maven.userSettings": "\/home\/allen\/.config\/maven\/settings.xml",$/;"	s
javascript.inlayHints.enumMemberValues.enabled	settings.json	/^    "javascript.inlayHints.enumMemberValues.enabled": true,$/;"	b
javascript.inlayHints.functionLikeReturnTypes.enabled	settings.json	/^    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,$/;"	b
jupyter.askForKernelRestart	settings.json	/^    "jupyter.askForKernelRestart": false,$/;"	b
keyboard.dispatch	settings.json	/^    "keyboard.dispatch": "keyCode",$/;"	s
label:focus	waybar/style.css	/^label:focus {$/;"	s
makefile.configureOnOpen	settings.json	/^    "makefile.configureOnOpen": true,$/;"	b
monitor	hypr/hyprland.conf	/^monitor=,highres,auto,2$/;"	k
notify_mic_user	hypr/scripts/volume	/^notify_mic_user() {$/;"	f
notify_user	hypr/scripts/volume	/^notify_user() {$/;"	f
once	hypr/hyprland.conf	/^exec-once = \/usr\/lib\/polkit-kde-authentication-agent-1 $/;"	k
once	hypr/hyprland.conf	/^exec-once = blueman-applet $/;"	k
once	hypr/hyprland.conf	/^exec-once = fcitx5 $/;"	k
once	hypr/hyprland.conf	/^exec-once = hyprpaper $/;"	k
once	hypr/hyprland.conf	/^exec-once = mako $/;"	k
once	hypr/hyprland.conf	/^exec-once = rclone mount Gdrive: ~\/Gdrive\/$/;"	k
once	hypr/hyprland.conf	/^exec-once = waybar $/;"	k
once	hypr/hyprland.conf	/^exec-once = wl-paste --watch cliphist store $/;"	k
once	hypr/hyprland.conf	/^exec-once = ~\/.local\/share\/clash\/cfw$/;"	k
preload	hypr/hyprpaper.conf	/^preload = ~\/Pictures\/壁纸\/Elaina_C.jpg$/;"	k
preload	hypr/hyprpaper.conf	/^preload = ~\/Pictures\/壁纸\/anmi_1.jpg$/;"	k
preload	hypr/hyprpaper.conf	/^preload = ~\/Pictures\/壁纸\/心海.jpg$/;"	k
preload	hypr/hyprpaper.conf	/^preload = ~\/Pictures\/壁纸\/愛の階段.jpg$/;"	k
python.analysis.inlayHints.callArgumentNames	settings.json	/^    "python.analysis.inlayHints.callArgumentNames": "all",$/;"	s
python.analysis.inlayHints.functionReturnTypes	settings.json	/^    "python.analysis.inlayHints.functionReturnTypes": true,$/;"	b
python.analysis.inlayHints.pytestParameters	settings.json	/^    "python.analysis.inlayHints.pytestParameters": true,$/;"	b
python.analysis.inlayHints.variableTypes	settings.json	/^    "python.analysis.inlayHints.variableTypes": true,$/;"	b
style bg	tmux.conf	/^set -g status-style bg=colour23$/;"	k
terminal.integrated.fontSize	settings.json	/^    "terminal.integrated.fontSize": 17,$/;"	n
toggle_mic	hypr/scripts/volume	/^toggle_mic() {$/;"	f
toggle_mute	hypr/scripts/volume	/^toggle_mute() {$/;"	f
version	fonts.conf	/^<?xml version="1.0"?>$/;"	k
vim	kitty.conf	/^vim:fileencoding=utf-8:foldmethod=marker$/;"	k
vim.handleKeys	settings.json	/^    "vim.handleKeys": {$/;"	o
vim.hlsearch	settings.json	/^    "vim.hlsearch": true,$/;"	b
vim.incsearch	settings.json	/^    "vim.incsearch": true,$/;"	b
vim.leader	settings.json	/^    "vim.leader": ",",$/;"	s
vim.normalModeKeyBindings	settings.json	/^    "vim.normalModeKeyBindings": [$/;"	a
vim.useCtrlKeys	settings.json	/^    "vim.useCtrlKeys": true,$/;"	b
vim.useSystemClipboard	settings.json	/^    "vim.useSystemClipboard": true,$/;"	b
vim.whichwrap	settings.json	/^    "vim.whichwrap": "h,l",$/;"	s
wallpaper	hypr/hyprpaper.conf	/^wallpaper = eDP-1,~\/Pictures\/壁纸\/愛の階段.jpg$/;"	k
window#waybar	waybar/style.css	/^window#waybar {$/;"	i
window#waybar.hidden	waybar/style.css	/^window#waybar.hidden {$/;"	c
window#waybar.termite	waybar/style.css	/^window#waybar.termite {$/;"	c
window.titleBarStyle	settings.json	/^    "window.titleBarStyle": "custom",$/;"	s
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = center, class:^(QQ)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = center, class:^(weixin)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = float, class:^(QQ)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = float, class:^(blueman-manager)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = float, class:^(weixin)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = fullscreen, class:^(kitty)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = maximize, class:^(firefox)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = tile, class:^(wps)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = workspace 4, class:^(Code)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = workspace 5, class:^(obsidian)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = workspace 5, class:^(wps)\$$/;"	k
windowrulev2	hypr/hyprland.conf	/^windowrulev2 = workspace 5, class:^libreoffice-$/;"	k
workbench.startupEditor	settings.json	/^    "workbench.startupEditor": "none",$/;"	s
workspace	hypr/hyprland.conf	/^workspace = 1, on-created-empty:kitty$/;"	k
workspace	hypr/hyprland.conf	/^workspace = 2, on-created-empty:firefox$/;"	k
workspace	hypr/hyprland.conf	/^workspace = 3, on-created-empty:nautilus$/;"	k
